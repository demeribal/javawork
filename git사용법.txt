1.git에 올릴 파일(로컬저장소) 생성
파일 이름이 ksy인 경우 파일 들어가서 cmd 활성화

2.수정 사항 git에 기록
git init

3.원격 저장소 연결
git remote add origin "원격 저장소 주소"
ex) git remote add origin https://github.com/demeribal/javawork.git
=>이 부분인가 아마 깃 로그인하라고 뜰텐데 처음에만 하면 됨

4.현재 main에 있는 변경사항 가져옴
git pull origin main
=>main은 최종 변경사항 파일이므로 정말 확실한 경우만 올리고
올린 후에는 무조건 공유하여 충돌방지하기
다른사람이 변경했는데 pull하지 않고 push하면 충돌남
main에 push하지 마세요!!

5.원격 저장소에 있는 브랜치 가져오기
git remote update

-----------------------------------------
위까지는 처음 한 번만 진행 이후로는 아래(5~11)만 반복
새로운 환경에서 진행시 1부터 시작
main(4)은 최종파일 느낌이니 필요하면 pull만 하기

6.본인 branch로 이동
git checkout 브랜치이름 
ex) git checkout sooyoon
=> Switched to branch 'sooyoon' 확인
=> 충돌 방지를 위해 본인 프로젝트는 본인 브랜치에서만 진행하기

7.현재 branch 확인
git branch
=> 본인 branch에 *과 함께 초록새 글씨 나타남
*main branch에 작업하지 않도록 필수적으로 확인

8.원격에서 해당 브랜치 변경 사항 가져옴(중요!!) -> 안하면 충돌날 수도
git pull origin 본인브랜치(현재 브랜치 이름)
ex) git pull origin sooyoon
=>충돌 방지를 위해 !!꼭!! 파일 수정 전 로컬과 원격을 같은 상황으로 만들어야함

9.파일 수정
파일 안에 본인 작업물 올리고 수정
수정 완료 후
git add .
=> git이 폴더의 모든 수정사항을 추적함
=> add 뒤에 띄어쓰기 후 .임

10.git 상황 확인
git status
=> 8진행 후 어떤 파일이 add되었는지 확인 가능

11. 로컬에 변경 사항 기록
git commit -m "깃에 해당파일과 함께 올라갈 이름"
ex) git commit -m "git 사용법"

12. commit 상황 확인
git log
=>현재가지 commit된 상황 확인가능
=>q로 나갈 수 있음

13원격(github)에 변경 사항 기록
git push -u origin 본인브랜치(현재 있는 브랜치)
ex) git push -u origin sooyoon

14. github에 새로고침하여 변경사항 확인

---------------------------------------------------------------------
--------------------------git merge하기----------------------------
현재 본인 브랜치에서 merge브랜치로 merge하는 과정을 설명함

1. 본인 브랜치에 main에 있는 파일 이름과 동일하게 하여 안에 본인이 수정한 파일만 넣기
=> 위와 같은 과정으로 올려야 merge가 편합니다

2. main브랜치가 아닌 merge브랜치에 합치기
=> 충돌방지를 위해 merge 브랜치로 합치고 이상없으면 main으로 옮겨주세요 (여기까지 해주셔도 제가 main으로 옮길게요)

3. 파일 이름만 같게 하면 기존에 있던 파일에 본인이 수정한 코드가 바뀌어서 올라감

4. merge과정
4-1. 본인 브랜치 pull, merge브랜치 pull
=> 합칠 브랜치와 가져올 브랜치 모두 pull 합니다(충돌방지)

4-2. 합쳐야할 브랜치로 이동합니다(merge)
git checkout merge

4-3. 본인이 이동한 브랜치가 merge가 맞는지 확인합니다
git branch
=> 아래 merge가 초록색으로 표시

4-4. 여기서 merge를 pull 합니다
git pull origin merge
=> 이전에 본인 브랜치도 pull 하고 오셔야합니다(충돌방지)

4-5. 본인 브랜치에 있는 파일 이름을 입력하여 merge브랜치에 합쳐줍니다
git checkout 본인브랜치이름 파일이름
=> ex) git checkout sooyoon kiosk

4-6. 이후에는 커밋과 푸시를 동일하게 진행합니다
ex)
git commit -m "flavor 수정"
git push origin merge

4-8. github로 이동해 정상적으로 올라갔는지 확인합니다
=>cmd에서 git status를 했을떄 nothing to commit, working tree clean 이렇게 나오면 성공

*********주의사항
만약 파일 이름을 다르게 하면 초록글씨가 엄청 뜨면서 파란색으로 아래와 같은 문구가 뜨는데
Apply addition to index and worktree [y,n,q,a,d,e,p,?]?
이때는 y를 연속적으로 입력해주면 해결됨. 이후에 똑같이 커밋과 푸시 해주면 해결
but. 이렇게 하면 merge하는 브랜치에 합쳐지지 않고 파일이 별도로 업로드 되니 그냥 파일 이름 같게 하시길 추천

----------------------------------------------------------------------
----------------------만약 pull이 안될 때----------------------------
********(주의사항: 로컬에 있는 파일은 전부 날아갈 수 있으니 백업)******아님 다른 방법 찾아보기
git fetch -all
 => 원격 저장소를 모두 fetch
git reset --hard origin/브랜치 이름
ex) git reset --hard origin/sooyoon
 => 해당 브랜치로 --hard 옵션을 주어 강제 리셋