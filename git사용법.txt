1.git에 올릴 파일(로컬저장소) 생성
파일 이름이 ksy인 경우 파일 들어가서 cmd 활성화

2.수정 사항 git에 기록
git init

3.원격 저장소 연결
git remote add origin "원격 저장소 주소"
ex) git remote add origin https://github.com/demeribal/javawork.git
=>이 부분인가 아마 깃 로그인하라고 뜰텐데 처음에만 하면 됨

4.현재 main에 있는 변경사항 가져옴
git pull origin main
=>main은 최종 변경사항 파일이므로 정말 확실한 경우만 올리고
올린 후에는 무조건 공유하여 충돌방지하기
다른사람이 변경했는데 pull하지 않고 push하면 충돌남
main에 push하지 마세요!!

5.원격 저장소에 있는 브랜치 가져오기
git remote update

-----------------------------------------
위까지는 처음 한 번만 진행 이후로는 아래(5~11)만 반복
새로운 환경에서 진행시 1부터 시작
main(4)은 최종파일 느낌이니 필요하면 pull만 하기

6.본인 branch로 이동
git checkout 브랜치이름 
ex) git checkout sooyoon
=> Switched to branch 'sooyoon' 확인
=> 충돌 방지를 위해 본인 프로젝트는 본인 브랜치에서만 진행하기

7.현재 branch 확인
git branch
=> 본인 branch에 *과 함께 초록새 글씨 나타남
*main branch에 작업하지 않도록 필수적으로 확인

8.원격에서 해당 브랜치 변경 사항 가져옴(중요!!) -> 안하면 충돌날 수도
git pull origin 본인브랜치(현재 브랜치 이름)
ex) git pull origin sooyoon
=>충돌 방지를 위해 !!꼭!! 파일 수정 전 로컬과 원격을 같은 상황으로 만들어야함

9.파일 수정
파일 안에 본인 작업물 올리고 수정
수정 완료 후
git add .
=> git이 폴더의 모든 수정사항을 추적함
=> add 뒤에 띄어쓰기 후 .임

10.git 상황 확인
git status
=> 8진행 후 어떤 파일이 add되었는지 확인 가능

11. 로컬에 변경 사항 기록
git commit -m "깃에 해당파일과 함께 올라갈 이름"
ex) git commit -m "git 사용법"

12. commit 상황 확인
git log
=>현재가지 commit된 상황 확인가능
=>q로 나갈 수 있음

13원격(github)에 변경 사항 기록
git push -u origin 본인브랜치(현재 있는 브랜치)
ex) git push -u origin sooyoon

14. github에 새로고침하여 변경사항 확인

---------------------------------------------------------------------
--------------------------git merge하기----------------------------
=> merge라는 branch에 sooyoon과 hamin을 merge한다고 가정
=> main은 완벽한 코드만 올라가야하기 때문에 main으로 옮기기 전 merge할 barnch를 따로 생성함

1. 합칠 branch로 이동
git checkout sooyoon

2. 충돌 방지를 위해 merge할 branch pull
git pull origin [merge 할 bracnch]
ex) git pull origin sooyoon

3. hamin branch도 1~2 똑같이 진행
git checkout hamin
git pull origin hamin

4. merge branch로 이동하여 branch pull해주기
git checkout merge
git pull origin merge
=> 1~4까지는 충돌 방지를 위한 과정

5. sooyoon과 hamin branch merge시키기
git merge sooyoon
git merge hamin

-------------------특정 파일만 merge-----------------------
=> sooyoon branch에 있는 a.txt 파일을 merge branch로 merge한다고 가정

1. 위 처럼 merge branch로 이동 후 pull
git checkout merge
git pull origin merge

2. 특정 파일만 합치기
git checkou -p sooyoon a.txt

-------------------특정파일 merge 방법2----------------------------
=> 현재 작업중인 A 브랜치에서 personalConfig.js 파일과 REAME.md 파일만은 그대로 두고, 
나머지 B 브랜치의 모든 변경 사항은 합치고 싶다면 
A 브랜치로 체크아웃 후에 아래의 과정을 거치면 된다.

$ git merge --no-commit --no-ff B -X theirs

$ git reset HEAD personalConfig.js README.md

$ git clean -fd

$ git commit
----------------------------------------------------------------------
----------------------만약 pull이 안될 때----------------------------
********(주의사항: 로컬에 있는 파일은 전부 날아갈 수 있으니 백업)******아님 다른 방법 찾아보기
git fetch -all
 => 원격 저장소를 모두 fetch
git reset --hard origin/브랜치 이름
ex) git reset --hard origin/sooyoon
 => 해당 브랜치로 --hard 옵션을 주어 강제 리셋